{"version":3,"sources":["components/alert.js"],"names":["dmx","Component","attributes","show","type","Boolean","default","String","enum","closable","methods","toggle","this","_toggle","_show","hide","_hide","setType","style","_setType","setTextContent","text","_setTextContent","init","node","_closeButton","jQuery","on","render","setAttribute","classList","add","props","setProperty","append","$parse","performUpdate","updatedProps","has","destroy","$node","off","contains","removeProperty","offsetWidth","one","remove","types","map","textContent"],"mappings":";;;;;;AAAAA,IAAAC,UAAA,YAAA,CAEAC,WAAA,CACAC,KAAA,CACAC,KAAAC,QACAC,SAAA,GAGAF,KAAA,CACAA,KAAAG,OACAD,QAAA,UACAE,KAAA,CAAA,UAAA,YAAA,UAAA,SAAA,UAAA,OAAA,QAAA,SAGAC,SAAA,CACAL,KAAAC,QACAC,SAAA,IAIAI,QAAA,CACAC,SACAC,KAAAC,SACA,EAEAV,OACAS,KAAAE,OACA,EAEAC,OACAH,KAAAI,OACA,EAEAC,QAAAC,GACAN,KAAAO,SAAAD,EACA,EAEAE,eAAAC,GACAT,KAAAU,gBAAAD,EACA,GAGAE,KAAAC,GACAZ,KAAAa,aAAAC,OAAA,2GAAAC,GAAA,kBAAA,KACAf,KAAAG,MAAA,GAEA,EAEAa,OAAAJ,GACAA,EAAAK,aAAA,OAAA,SACAL,EAAAM,UAAAC,IAAA,QAAA,SAAAnB,KAAAoB,MAAA5B,MAEAQ,KAAAoB,MAAA7B,KACAqB,EAAAM,UAAAC,IAAA,QAEAP,EAAAN,MAAAe,YAAA,UAAA,QAGArB,KAAAoB,MAAAvB,WACAiB,OAAAF,GAAAU,OAAAtB,KAAAa,cACAD,EAAAM,UAAAC,IAAA,sBAGAnB,KAAAuB,QACA,EAEAC,cAAAC,GACAA,EAAAC,IAAA,SACA1B,KAAAO,SAAAP,KAAAoB,MAAA5B,MAGAiC,EAAAC,IAAA,SACA1B,KAAAA,KAAAoB,MAAA7B,KAAA,QAAA,UAEA,EAEAoC,UACAb,OAAAd,KAAA4B,OAAAC,IAAA,aACAf,OAAAd,KAAAa,cAAAgB,IAAA,YACA,EAEA5B,UACAD,KAAAA,KAAA4B,MAAAV,UAAAY,SAAA,QAAA,QAAA,UACA,EAEA5B,QACAF,KAAA4B,MAAAtB,MAAAyB,eAAA,WACA/B,KAAA4B,MAAAI,YACAhC,KAAA4B,MAAAV,UAAAC,IAAA,OACA,EAEAf,QACAJ,KAAA4B,MAAAV,UAAAY,SAAA,QACAhB,OAAAd,KAAA4B,OAAAK,IAAA,0BAAA,KACAjC,KAAA4B,MAAAtB,MAAAe,YAAA,UAAA,OAAA,IAGArB,KAAA4B,MAAAtB,MAAAe,YAAA,UAAA,QAEArB,KAAA4B,MAAAV,UAAAgB,OAAA,OACA,EAEA3B,SAAAf,GACA,MAAA2C,EAAA,CAAA,UAAA,YAAA,UAAA,SAAA,UAAA,OAAA,QAAA,QAAAC,KAAA5C,GAAA,SAAAA,IACAQ,KAAA4B,MAAAV,UAAAgB,UAAAC,GACAnC,KAAA4B,MAAAV,UAAAC,IAAA,SAAA3B,EACA,EAEAkB,gBAAAD,GACAT,KAAA4B,MAAAS,YAAA5B,EACAT,KAAAoB,MAAAvB,UACAiB,OAAAd,KAAA4B,OAAAN,OAAAtB,KAAAa,aAEA","file":"dmxBootstrap4Alert.js","sourcesContent":["dmx.Component('bs4-alert', {\r\n\r\n  attributes: {\r\n    show: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    type: {\r\n      type: String,\r\n      default: 'primary',\r\n      enum: ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'],\r\n    },\r\n\r\n    closable: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    toggle () {\r\n      this._toggle();\r\n    },\r\n\r\n    show () {\r\n      this._show();\r\n    },\r\n\r\n    hide () {\r\n      this._hide();\r\n    },\r\n\r\n    setType (style) {\r\n      this._setType(style);\r\n    },\r\n\r\n    setTextContent (text) {\r\n      this._setTextContent(text);\r\n    },\r\n  },\r\n\r\n  init (node) {\r\n    this._closeButton = jQuery('<button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>').on('click.bs.alert', () => {\r\n      this.hide();\r\n    });\r\n  },\r\n\r\n  render (node) {\r\n    node.setAttribute('role', 'alert');\r\n    node.classList.add('alert', 'alert-' + this.props.type);\r\n    \r\n    if (this.props.show) {\r\n      node.classList.add('show');\r\n    } else {\r\n      node.style.setProperty('display', 'none');\r\n    }\r\n    \r\n    if (this.props.closable) {\r\n      jQuery(node).append(this._closeButton);\r\n      node.classList.add('alert-dismissible');\r\n    }\r\n    \r\n    this.$parse();\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (updatedProps.has('type')) {\r\n      this._setType(this.props.type);\r\n    }\r\n\r\n    if (updatedProps.has('show')) {\r\n      this[this.props.show ? '_show' : '_hide']();\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    jQuery(this.$node).off('.bs.alert');\r\n    jQuery(this._closeButton).off('.bs.alert');\r\n  },\r\n\r\n  _toggle () {\r\n    this[this.$node.classList.contains('show') ? '_hide' : '_show']();\r\n  },\r\n\r\n  _show () {\r\n    this.$node.style.removeProperty('display');\r\n    this.$node.offsetWidth;\r\n    this.$node.classList.add('show');\r\n  },\r\n\r\n  _hide () {\r\n    if (this.$node.classList.contains('fade')) {\r\n      jQuery(this.$node).one('transitionend.bs.alert', () => {\r\n        this.$node.style.setProperty('display', 'none');\r\n      });\r\n    } else {\r\n      this.$node.style.setProperty('display', 'none');\r\n    }\r\n    this.$node.classList.remove('show');\r\n  },\r\n\r\n  _setType (type) {\r\n    const types = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map(type => 'alert-' + type);\r\n    this.$node.classList.remove(...types);\r\n    this.$node.classList.add('alert-' + type);\r\n  },\r\n\r\n  _setTextContent (text) {\r\n    this.$node.textContent = text;\r\n    if (this.props.closable) {\r\n      jQuery(this.$node).append(this._closeButton);\r\n    }\r\n  },\r\n\r\n});\r\n"]}