{"version":3,"sources":["components/backgroundVideo.js"],"names":["dmx","Component","initialData","paused","attributes","src","type","String","default","methods","play","this","_video","pause","toggle","init","node","_update","bind","videoWrapper","document","createElement","videoElement","style","setProperty","props","playsInline","autoplay","muted","loop","setAttribute","addEventListener","wrapper","parentNode","insertBefore","appendChild","_wrapper","detroy","removeEventListener","remove","performUpdate","updatedProps","has","event","set"],"mappings":";;;;;;AAAAA,IAAAC,UAAA,mBAAA,CAEAC,YAAA,CACAC,QAAA,GAGAC,WAAA,CACAC,IAAA,CACAC,KAAAC,OACAC,QAAA,OAIAC,QAAA,CACAC,OACAC,KAAAC,OAAAF,MACA,EAEAG,QACAF,KAAAC,OAAAC,OACA,EAEAC,SACAH,KAAAC,OAAAT,OACAQ,KAAAC,OAAAF,OAEAC,KAAAC,OAAAC,OAEA,GAGAE,KAAAC,GACAL,KAAAM,QAAAN,KAAAM,QAAAC,KAAAP,MAEA,MAAAQ,EAAAC,SAAAC,cAAA,OACAC,EAAAF,SAAAC,cAAA,SAEAF,EAAAI,MAAAC,YAAA,WAAA,YACAL,EAAAI,MAAAC,YAAA,QAAA,QACAL,EAAAI,MAAAC,YAAA,SAAA,QACAL,EAAAI,MAAAC,YAAA,WAAA,UAEAF,EAAAC,MAAAC,YAAA,WAAA,YACAF,EAAAC,MAAAC,YAAA,QAAA,QACAF,EAAAC,MAAAC,YAAA,SAAA,QACAF,EAAAC,MAAAC,YAAA,YAAA,QACAF,EAAAC,MAAAC,YAAA,aAAA,QACAF,EAAAC,MAAAC,YAAA,MAAA,OACAF,EAAAC,MAAAC,YAAA,OAAA,OACAF,EAAAC,MAAAC,YAAA,YAAA,yBAEAF,EAAAjB,IAAAM,KAAAc,MAAApB,IACAiB,EAAAI,aAAA,EACAJ,EAAAK,UAAA,EACAL,EAAAM,OAAA,EACAN,EAAAO,MAAA,EAEAP,EAAAQ,aAAA,QAAA,IACAR,EAAAQ,aAAA,cAAA,IAEAR,EAAAS,iBAAA,OAAApB,KAAAM,SACAK,EAAAS,iBAAA,QAAApB,KAAAM,SAEA,MAAAe,EAAAZ,SAAAC,cAAA,OAEAW,EAAAT,MAAAC,YAAA,WAAA,YACAR,EAAAO,MAAAC,YAAA,WAAA,YAEAR,EAAAiB,WAAAC,aAAAF,EAAAhB,GACAG,EAAAgB,YAAAb,GACAU,EAAAG,YAAAhB,GACAa,EAAAG,YAAAnB,GAEAL,KAAAyB,SAAAJ,EACArB,KAAAC,OAAAU,CACA,EAEAe,SACA1B,KAAAC,OAAA0B,oBAAA,OAAA3B,KAAAM,SACAN,KAAAC,OAAA0B,oBAAA,QAAA3B,KAAAM,SACAN,KAAAyB,SAAAG,QACA,EAEAC,cAAAC,GACAA,EAAAC,IAAA,SACA/B,KAAAC,OAAAP,IAAAM,KAAAc,MAAApB,IAEA,EAEAY,QAAA0B,GACAhC,KAAAiC,IAAA,SAAAjC,KAAAC,OAAAT,OACA","file":"dmxBackgroundVideo.js","sourcesContent":["dmx.Component('background-video', {\r\n\r\n  initialData: {\r\n    paused: false,\r\n  },\r\n\r\n  attributes: {\r\n    src: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    play () {\r\n      this._video.play();\r\n    },\r\n\r\n    pause () {\r\n      this._video.pause();\r\n    },\r\n\r\n    toggle () {\r\n      if (this._video.paused) {\r\n        this._video.play();\r\n      } else {\r\n        this._video.pause();\r\n      }\r\n    },\r\n  },\r\n\r\n  init (node) {\r\n    this._update = this._update.bind(this);\r\n\r\n    const videoWrapper = document.createElement('div');\r\n    const videoElement = document.createElement('video');\r\n\r\n    videoWrapper.style.setProperty('position', 'absolute');\r\n    videoWrapper.style.setProperty('width', '100%');\r\n    videoWrapper.style.setProperty('height', '100%');\r\n    videoWrapper.style.setProperty('overflow', 'hidden');\r\n\r\n    videoElement.style.setProperty('position', 'absolute');\r\n    videoElement.style.setProperty('width', 'auto');\r\n    videoElement.style.setProperty('height', 'auto');\r\n    videoElement.style.setProperty('min-width', '100%');\r\n    videoElement.style.setProperty('min-height', '100%');\r\n    videoElement.style.setProperty('top', '50%');\r\n    videoElement.style.setProperty('left', '50%');\r\n    videoElement.style.setProperty('transform', 'translate(-50%, -50%)');\r\n\r\n    videoElement.src = this.props.src;\r\n    videoElement.playsInline = true;\r\n    videoElement.autoplay = true;\r\n    videoElement.muted = true;\r\n    videoElement.loop = true;\r\n\r\n    videoElement.setAttribute('muted', '');\r\n    videoElement.setAttribute('playsinline', '');\r\n\r\n    videoElement.addEventListener('play', this._update);\r\n    videoElement.addEventListener('pause', this._update);\r\n\r\n    const wrapper = document.createElement('div');\r\n\r\n    wrapper.style.setProperty('position', 'relative');\r\n    node.style.setProperty('position', 'relative');\r\n\r\n    node.parentNode.insertBefore(wrapper, node);\r\n    videoWrapper.appendChild(videoElement);\r\n    wrapper.appendChild(videoWrapper);\r\n    wrapper.appendChild(node);\r\n\r\n    this._wrapper = wrapper;\r\n    this._video = videoElement;\r\n  },\r\n\r\n  detroy () {\r\n    this._video.removeEventListener('play', this._update);\r\n    this._video.removeEventListener('pause', this._update);\r\n    this._wrapper.remove();\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (updatedProps.has('src')) {\r\n      this._video.src = this.props.src;\r\n    }\r\n  },\r\n\r\n  _update (event) {\r\n    this.set('paused', this._video.paused);\r\n  },\r\n\r\n});\r\n"]}